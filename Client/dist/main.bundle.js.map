{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/creative.service.ts","./src/app/creative/creative.component.css","./src/app/creative/creative.component.html","./src/app/creative/creative.component.ts","./src/app/gallery/gallery.component.css","./src/app/gallery/gallery.component.html","./src/app/gallery/gallery.component.ts","./src/app/newcreative/newcreative.component.css","./src/app/newcreative/newcreative.component.html","./src/app/newcreative/newcreative.component.ts","./src/app/updatecreative/updatecreative.component.css","./src/app/updatecreative/updatecreative.component.html","./src/app/updatecreative/updatecreative.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"  <router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","// angular modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n// internal components\nimport { AppComponent } from './app.component';\nimport { GalleryComponent } from './gallery/gallery.component';\nimport { CreativeComponent } from './creative/creative.component';\nimport { UpdatecreativeComponent } from './updatecreative/updatecreative.component';\nimport { NewcreativeComponent } from './newcreative/newcreative.component';\n\n// routes\nconst routes: Routes = [\n  { path: '', redirectTo: '/gallery', pathMatch: 'full'},\n  { path: 'gallery', component: GalleryComponent },\n  { path: 'newcreative', component: NewcreativeComponent },\n  { path: 'detail/:id', component: UpdatecreativeComponent }\n\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GalleryComponent,\n    CreativeComponent,\n    UpdatecreativeComponent,\n    NewcreativeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(\n      routes\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class CreativeService {\n\n  private apiurl = environment.apiurl;\n\n  constructor(private http:HttpClient) { }\n\n  listCreatives(){\n    return this.http.get(this.apiurl + 'api/creatives');\n  }\n\n  getCreative(id){\n    return this.http.get(this.apiurl + 'api/creatives/' + id);\n  }\n\n  deleteCreative(id){\n    return this.http.delete(this.apiurl + 'api/creatives/' + id);\n  }\n\n  createCreative(creative){\n     return this.http.post(this.apiurl + 'api/creatives/submitcreative', creative);\n  }\n\n  updateCreative(id, creative){\n     return this.http.put(this.apiurl + 'api/creatives/' + id, creative);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/creative.service.ts","module.exports = \".card {\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/creative/creative.component.css\n// module id = ./src/app/creative/creative.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <ul class=\\\"nav nav-tabs card-header-tabs\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\">Summary</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/detail/{{creative._id}}\\\">View & Update</a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-6\\\">\\n        <small> Line of Business:</small>\\n        <h3> {{ creative.lob }} </h3>\\n\\n        <small> Creative Name:</small>\\n        <h4> {{ creative.name }} </h4>\\n\\n      </div>\\n\\n      <div class=\\\"col-6\\\">\\n        <small>Month |  Week:</small>\\n        <h3> {{ creative.month }} | {{ creative.week }} </h3>\\n\\n        <small>Status:</small>\\n        <h4> {{ creative.status }}</h4>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card-footer\\\">\\n    <small class=\\\"text-muted\\\">Updated at: {{ creative.updatedAt }}</small>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/creative/creative.component.html\n// module id = ./src/app/creative/creative.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CreativeService } from '../creative.service';\n\n@Component({\n  selector: 'app-creative',\n  templateUrl: './creative.component.html',\n  styleUrls: ['./creative.component.css'],\n  providers: [CreativeService]\n})\nexport class CreativeComponent implements OnInit {\n\n  @Input() creative;\n\n  constructor(private creativeService:CreativeService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/creative/creative.component.ts","module.exports = \"button {\\r\\n  margin-left: 7px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/gallery/gallery.component.css\n// module id = ./src/app/gallery/gallery.component.css\n// module chunks = main","module.exports = \"<!-- gallery toolbar -->\\n<div class=\\\"container\\\">\\n  <div class=\\\"btn-toolbar\\\" role=\\\"toolbar\\\">\\n    <form class=\\\"form-inline\\\">\\n      <select class=\\\"custom-select my-1 mr-sm-2\\\" id=\\\"sortBy\\\">\\n        <option selected>Sort By...</option>\\n        <option value=\\\"1\\\">Line of Business</option>\\n        <option value=\\\"2\\\">Month</option>\\n        <option value=\\\"3\\\">Week</option>\\n      </select>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-dark my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</div>\\n<!-- creative card -->\\n<div class=\\\"container\\\">\\n    <app-creative\\n      *ngFor='let creativeObject of creativeList'\\n      [creative]=\\\"creativeObject\\\">\\n    </app-creative>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/gallery/gallery.component.html\n// module id = ./src/app/gallery/gallery.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { CreativeService } from '../creative.service';\n\n@Component({\n  selector: 'app-gallery',\n  templateUrl: './gallery.component.html',\n  styleUrls: ['./gallery.component.css'],\n  providers: [CreativeService]\n})\nexport class GalleryComponent implements OnInit {\n\n  constructor(private creativeService:CreativeService){\n  }\n\n  creativeList = null;\n\n  ngOnInit() {\n     this.updateCreativeList();\n   }\n\n   updateCreativeList():void{\n     this.creativeService.listCreatives().subscribe((creatives)=>{\n       this.creativeList = creatives;\n     });\n   }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/gallery/gallery.component.ts","module.exports = \"  .card {\\r\\n    margin-top: 60px;\\r\\n  }\\r\\n\\r\\n    .ng-valid[required], .ng-valid.required  {\\r\\n    border-left: 5px solid #42A948; /* green */\\r\\n  }\\r\\n\\r\\n    .ng-invalid:not(form)  {\\r\\n    border-left: 5px solid #a94442; /* red */\\r\\n  }\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/newcreative/newcreative.component.css\n// module id = ./src/app/newcreative/newcreative.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <form #newCreativeForm=\\\"ngForm\\\" (ngSubmit)=\\\"save(newCreativeForm)\\\">\\n      <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-md-4 mb-3\\\">\\n          <label for=\\\"lob\\\">Line of Business</label>\\n          <select class=\\\"form-control\\\" required id=\\\"lob\\\" name=\\\"lob\\\" [(ngModel)]=\\\"creative.lob\\\" #lob=\\\"ngModel\\\">\\n            <option *ngFor='let lob of lobs' value=\\\"{{lob}}\\\">{{ lob }}</option>\\n          </select>\\n\\n          <br>\\n\\n          <label for=\\\"estVolume\\\">Estimated Letter Volume</label>\\n          <select class=\\\"form-control\\\" required id=\\\"estVolume\\\" name=\\\"estVolume\\\" [(ngModel)]=\\\"creative.estVolume\\\" #estVolume=\\\"ngModel\\\">\\n            <option *ngFor='let volume of volumes' value=\\\"{{ volume }}\\\">{{ volume }}</option>\\n          </select>\\n\\n          <br>\\n\\n          <label for=\\\"month\\\">Drop Month</label>\\n          <select class=\\\"form-control\\\" required id=\\\"month\\\" name='month' [(ngModel)]=\\\"creative.month\\\" #month=\\\"ngModel\\\">\\n            <option *ngFor='let month of months' value=\\\"{{ month }}\\\">{{ month }}</option>\\n          </select>\\n\\n          <br>\\n          <label for=\\\"week\\\">Drop Week</label>\\n          <select class=\\\"form-control\\\" required id=\\\"week\\\" name='week' [(ngModel)]=\\\"creative.week\\\" #week=\\\"ngModel\\\">\\n            <option *ngFor='let week of weeks' value=\\\"{{ week }}\\\">{{ week }}</option>\\n          </select>\\n\\n        </div>\\n\\n        <div class=\\\"col-md-8 mb-3\\\">\\n          <label for=\\\"name\\\">Creative Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" required id=\\\"name\\\" name='name' [(ngModel)]=\\\"creative.name\\\" placeholder=\\\"Creative Name\\\" #name=\\\"ngModel\\\">\\n\\n          <br>\\n\\n          <label for=\\\"email\\\">Email Address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" required id=\\\"email\\\" name='email' [(ngModel)]=\\\"creative.email\\\" placeholder=\\\"Primary Business POC eMail\\\" #name=\\\"ngModel\\\">\\n\\n          <!-- determine if testing data required -->\\n          <div *ngIf=\\\"creative.estVolume === '1,000,001 to 2,500,000' ||\\n          creative.estVolume === '2,500,001 to 10,000,000' ||\\n          creative.estVolume === '>10,000,000'\\\">\\n\\n          <br>\\n\\n          <label for=\\\"testingCode\\\">Testing Code</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"testingCode\\\" name='testingCode' [(ngModel)]=\\\"creative.testingCode\\\" placeholder=\\\"Required if volume exceeds 1MM\\\">\\n\\n          <br>\\n\\n          <label for=\\\"testingCodeCreativeName\\\">Testing Code Creative Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"testingCodeCreativeName\\\" name='testingCodeCreativeName' [(ngModel)]=\\\"creative.testingCodeCreativeName\\\"  placeholder=\\\"Required if volume exceeds 1MM\\\">\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <hr class=\\\"mb-4\\\">\\n\\n    <label for=\\\"resFam\\\">Reservation Family</label>\\n    <select class=\\\"form-control\\\" required id=\\\"resFam\\\" name='resFam' [(ngModel)]=\\\"creative.resFam\\\" #resFam=\\\"ngModel\\\">\\n      <option *ngFor='let resFam of resFams' value=\\\"{{ resFam }}\\\">{{ resFam }}</option>\\n    </select>\\n\\n\\n    <!-- <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <label for=\\\"printMethod\\\">Print Method</label>\\n        <select class=\\\"form-control\\\" required id=\\\"printMethod\\\" name='printMethod' [(ngModel)]=\\\"creative.printMethod\\\" #printMethod=\\\"ngModel\\\">\\n          <option *ngFor='let printMethod of printMethods' value=\\\"{{ printMethod }}\\\">{{ printMethod }}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <label for=\\\"simplexDuplex\\\">Personization</label>\\n        <select class=\\\"form-control\\\" required id=\\\"simplexDuplex\\\" name='simplexDuplex' [(ngModel)]=\\\"creative.simplexDuplex\\\" #simplexDuplex=\\\"ngModel\\\">\\n          <option *ngFor='let simplexDuplex of simplexDuplexs' value=\\\"{{ simplexDuplex }}\\\">{{ simplexDuplex }}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <label for=\\\"height\\\">Letter Height</label>\\n        <select class=\\\"form-control\\\" required id=\\\"height\\\" name='height' [(ngModel)]=\\\"creative.height\\\" #height=\\\"ngModel\\\">\\n          <option *ngFor='let height of heights' value=\\\"{{ height }}\\\">{{ height }}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <label for=\\\"insert\\\">Number of Inserts</label>\\n        <select class=\\\"form-control\\\" required id=\\\"insert\\\" name='insert' [(ngModel)]=\\\"creative.insert\\\" #insert=\\\"ngModel\\\">\\n          <option *ngFor='let insert of inserts' value=\\\"{{ insert }}\\\">{{ insert }}</option>\\n        </select>\\n      </div>\\n    </div> -->\\n\\n    <hr class=\\\"mb-4\\\">\\n  <!-- <div *ngIf=\\\"!newCreativeForm.valid\\\">\\n    <p>Complete form for cost estimate<p>\\n  </div>\\n\\n\\n<div *ngIf=\\\"newCreativeForm.valid\\\">\\n<p>Estimate cost per creative: $10<p>\\n</div>\\n    <hr class=\\\"mb-4\\\"> -->\\n\\n\\n  <button class=\\\"btn btn-primary btn-lg btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"!newCreativeForm.valid\\\" >Complete</button>\\n</form>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/newcreative/newcreative.component.html\n// module id = ./src/app/newcreative/newcreative.component.html\n// module chunks = main","import { Component, OnInit, Output } from '@angular/core';\nimport { CreativeService } from '../creative.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-newcreative',\n  templateUrl: './newcreative.component.html',\n  styleUrls: ['./newcreative.component.css'],\n  providers: [CreativeService]\n})\nexport class NewcreativeComponent implements OnInit {\n\n  constructor(private creativeService: CreativeService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  // creative object, bound to the form fields\n  creative:any = {}\n\nsave(newCreativeForm) : void {\n  this.creative.status = 'New';\n  this.creativeService.createCreative(this.creative)\n        .subscribe((creative)=>{\n          console.log(creative);\n        });\n  this.router.navigate(['/gallery/']);\n  }\n\n  // define allowable fields\n  lobs = [\n    'Mainstreet',\n    'Upmarket',\n    \"Sony\",\n    \"Small Business\"]\n\n    status = [\n      'New',\n      'Complete',\n      'Pending',\n      'Reviewed']\n\n  vendors = [\n      'DD Ronelly',\n      'Outlet',\n      \"Bartleby's\",\n      \"JLM\"]\n\n  volumes = [\n    '1 to 100,000',\n    '100,001 to 250,000',\n    '250,001 to 500,000',\n    '500,001 to 1,000,000',\n    '1,000,001 to 2,500,000',\n    '2,500,001 to 10,000,000',\n    '>10,000,000']\n\n  printMethods = [\n    'Inkjet',\n    'Laser',\n    \"MICR\"\n  ]\n\n  simplexDuplexs = [\n    'Simpex',\n    'Duplex'\n  ]\n\n  heights = [\n    '11',\n    '14',\n    '17',\n    '22',\n  ]\n\n  inserts = [\n    '1',\n    '2',\n  ]\n\nmonths = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'Decemeber'\n]\n\nweeks = [\n  '1',\n  '2',\n  '3',\n  '4',\n  '5'\n]\n\nmiscCharges = [\n  {charge:'Spot Glue',code:'SPG'},\n  {charge:'Glitter',code:'GLR'},\n  {charge:'Waffer Seal',code:'WFS'},\n  {charge:'Attractive Smell',code:'SML'},\n  {charge:'Matt Bartles Awesomeness',code:'A1+'}\n]\n\nresFams = [\n  'Interstack Card Affix',\n  'Closed Face with Unique Spot Emboss',\n  'Interstack Cardstock Buckslip'\n]\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/newcreative/newcreative.component.ts","module.exports = \".card {\\r\\n  margin-top: 60px;\\r\\n}\\r\\n\\r\\n\\r\\n.ng-valid[required], .ng-valid.required  {\\r\\nborder-left: 5px solid #42A948; /* green */\\r\\n}\\r\\n\\r\\n\\r\\n.ng-invalid:not(form)  {\\r\\nborder-left: 5px solid #a94442; /* red */\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/updatecreative/updatecreative.component.css\n// module id = ./src/app/updatecreative/updatecreative.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    <ul class=\\\"nav nav-tabs card-header-tabs\\\">\\n      <li class=\\\"nav-item\\\">\\n        <div *ngIf=\\\"!editing\\\"><a class=\\\"nav-link active\\\" (click)=\\\"setEditMode(false)\\\">Details</a></div>\\n        <div *ngIf=\\\"editing\\\"><a class=\\\"nav-link\\\" (click)=\\\"setEditMode(false)\\\">Details</a></div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <div *ngIf=\\\"!editing\\\"><a class=\\\"nav-link\\\" (click)=\\\"setEditMode(true)\\\">Update</a></div>\\n        <div *ngIf=\\\"editing\\\"><a class=\\\"nav-link active\\\" (click)=\\\"setEditMode(true)\\\">Update</a></div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"deleteCreative(creative._id)\\\">Delete</a>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"!editing\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 mb-3\\\">\\n          <small> Line of Business:</small>\\n          <h3> {{ creative.lob }} </h3>\\n\\n          <small> Estimated Letter Volume:</small>\\n          <h3> {{ creative.estVolume }} </h3>\\n\\n          <small> Drop Month:</small>\\n          <h3> {{ creative.month }} </h3>\\n\\n          <small> Drop Week:</small>\\n          <h3> {{ creative.week }} </h3>\\n\\n        </div>\\n\\n        <div class=\\\"col-md-8 mb-3\\\">\\n          <small>Creative Name:</small>\\n          <h3> {{ creative.name }} </h3>\\n\\n          <small>eMail Address:</small>\\n          <h3> {{ creative.email }} </h3>\\n\\n          <!-- determine if testing data required -->\\n          <div *ngIf=\\\"creative.estVolume === '1,000,001 to 2,500,000' ||\\n          creative.estVolume === '2,500,001 to 10,000,000' ||\\n          creative.estVolume === '>10,000,000'\\\">\\n\\n          <small>Testing Code</small>\\n          <h3> {{ creative.testingCode }} </h3>\\n\\n          <small>Testing Code Creative Name</small>\\n          <h3> {{ creative.testingCodeCreativeName }} </h3>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n    <hr class=\\\"mb-4\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <small>Print Method</small>\\n        <h3> {{ creative.printMethod }} </h3>\\n      </div>\\n\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <small>Personization</small>\\n        <h3> {{ creative.simplexDuplex }} </h3>\\n      </div>\\n\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <small>Letter Height</small>\\n        <h3> {{ creative.height }} </h3>\\n      </div>\\n\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <small>Number of Inserts</small>\\n        <h3> {{ creative.insert }} </h3>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n\\n  <div *ngIf=\\\"editing\\\">\\n\\n    <form #newCreativeForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateCreative(updateCreativeForm)\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 mb-3\\\">\\n          <label for=\\\"lob\\\">Line of Business</label>\\n          <select class=\\\"form-control\\\" required id=\\\"lob\\\" name=\\\"lob\\\" [(ngModel)]=\\\"creative.lob\\\" #lob=\\\"ngModel\\\">\\n            <option *ngFor='let lob of lobs' value=\\\"{{lob}}\\\">{{ lob }}</option>\\n          </select>\\n\\n          <br>\\n\\n          <label for=\\\"estVolume\\\">Estimated Letter Volume</label>\\n          <select class=\\\"form-control\\\" required id=\\\"estVolume\\\" name=\\\"estVolume\\\" [(ngModel)]=\\\"creative.estVolume\\\" #estVolume=\\\"ngModel\\\">\\n            <option *ngFor='let volume of volumes' value=\\\"{{ volume }}\\\">{{ volume }}</option>\\n          </select>\\n\\n          <br>\\n\\n          <label for=\\\"month\\\">Drop Month</label>\\n          <select class=\\\"form-control\\\" required id=\\\"month\\\" name='month' [(ngModel)]=\\\"creative.month\\\" #month=\\\"ngModel\\\">\\n            <option *ngFor='let month of months' value=\\\"{{ month }}\\\">{{ month }}</option>\\n          </select>\\n\\n          <br>\\n          <label for=\\\"week\\\">Drop Week</label>\\n          <select class=\\\"form-control\\\" required id=\\\"week\\\" name='week' [(ngModel)]=\\\"creative.week\\\" #week=\\\"ngModel\\\">\\n            <option *ngFor='let week of weeks' value=\\\"{{ week }}\\\">{{ week }}</option>\\n          </select>\\n\\n        </div>\\n\\n        <div class=\\\"col-md-8 mb-3\\\">\\n          <label for=\\\"name\\\">Creative Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" required id=\\\"name\\\" name='name' [(ngModel)]=\\\"creative.name\\\" placeholder=\\\"Creative Name\\\" #name=\\\"ngModel\\\">\\n\\n          <br>\\n\\n          <label for=\\\"email\\\">Email Address</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" required id=\\\"email\\\" name='email' [(ngModel)]=\\\"creative.email\\\" placeholder=\\\"Primary Business POC eMail\\\" #name=\\\"ngModel\\\">\\n\\n          <!-- determine if testing data required -->\\n          <div *ngIf=\\\"creative.estVolume === '1,000,001 to 2,500,000' ||\\n          creative.estVolume === '2,500,001 to 10,000,000' ||\\n          creative.estVolume === '>10,000,000'\\\">\\n\\n          <br>\\n\\n          <label for=\\\"testingCode\\\">Testing Code</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"testingCode\\\" name='testingCode' [(ngModel)]=\\\"creative.testingCode\\\" placeholder=\\\"Required if volume exceeds 1MM\\\">\\n\\n          <br>\\n\\n          <label for=\\\"testingCodeCreativeName\\\">Testing Code Creative Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"testingCodeCreativeName\\\" name='testingCodeCreativeName' [(ngModel)]=\\\"creative.testingCodeCreativeName\\\"  placeholder=\\\"Required if volume exceeds 1MM\\\">\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <hr class=\\\"mb-4\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <label for=\\\"printMethod\\\">Print Method</label>\\n        <select class=\\\"form-control\\\" required id=\\\"printMethod\\\" name='printMethod' [(ngModel)]=\\\"creative.printMethod\\\" #printMethod=\\\"ngModel\\\">\\n          <option *ngFor='let printMethod of printMethods' value=\\\"{{ printMethod }}\\\">{{ printMethod }}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <label for=\\\"simplexDuplex\\\">Personization</label>\\n        <select class=\\\"form-control\\\" required id=\\\"simplexDuplex\\\" name='simplexDuplex' [(ngModel)]=\\\"creative.simplexDuplex\\\" #simplexDuplex=\\\"ngModel\\\">\\n          <option *ngFor='let simplexDuplex of simplexDuplexs' value=\\\"{{ simplexDuplex }}\\\">{{ simplexDuplex }}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <label for=\\\"height\\\">Letter Height</label>\\n        <select class=\\\"form-control\\\" required id=\\\"height\\\" name='height' [(ngModel)]=\\\"creative.height\\\" #height=\\\"ngModel\\\">\\n          <option *ngFor='let height of heights' value=\\\"{{ height }}\\\">{{ height }}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"col-md-3 mb-3\\\">\\n        <label for=\\\"insert\\\">Number of Inserts</label>\\n        <select class=\\\"form-control\\\" required id=\\\"insert\\\" name='insert' [(ngModel)]=\\\"creative.insert\\\" #insert=\\\"ngModel\\\">\\n          <option *ngFor='let insert of inserts' value=\\\"{{ insert }}\\\">{{ insert }}</option>\\n        </select>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <label for=\\\"resFam\\\">Reservation Family</label>\\n        <select class=\\\"form-control\\\" required id=\\\"resFam\\\" name='resFam' [(ngModel)]=\\\"creative.resFam\\\" #resFam=\\\"ngModel\\\">\\n          <option *ngFor='let resFam of resFams' value=\\\"{{ resFam }}\\\">{{ resFam }}</option>\\n        </select>\\n      </div>\\n    </div>\\n            <hr class=\\\"mb-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div *ngIf=\\\"!newCreativeForm.valid\\\">\\n          <p>Complete form for cost estimate<p>\\n          </div>\\n\\n\\n          <div *ngIf=\\\"newCreativeForm.valid\\\">\\n            <p>Estimate cost per creative: $10<p>\\n            </div>\\n\\n            <hr class=\\\"mb-4\\\">\\n          </div>\\n        </div>\\n        <button class=\\\"btn btn-primary btn-lg btn-block\\\" type=\\\"submit\\\" (click)=\\\"setEditMode(false)\\\" [disabled]=\\\"!newCreativeForm.valid\\\" >Update</button>\\n      </form>\\n    </div>\\n\\n\\n  </div>\\n  <div class=\\\"card-footer\\\">\\n    <small class=\\\"text-muted\\\">Updated at: {{ creative.updatedAt }}</small>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/updatecreative/updatecreative.component.html\n// module id = ./src/app/updatecreative/updatecreative.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { CreativeService } from '../creative.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-updatecreative',\n  templateUrl: './updatecreative.component.html',\n  styleUrls: ['./updatecreative.component.css'],\n  providers: [CreativeService]\n\n})\nexport class UpdatecreativeComponent implements OnInit {\n\n  constructor(private creativeService: CreativeService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  // declare creative\n  creative:any = {};\n\n  // flag for edit mode\n  editing:boolean=false;\n\n  // bound to edit and cancel buttons in view\n  setEditMode(mode):void{\n    this.editing = (mode ? true : false);\n  }\n\n  ngOnInit() {\n     this.getCreative();\n   }\n\n   getCreative():void{\n     const param = this.route.snapshot.paramMap.get('id');\n     this.creativeService.getCreative(param).subscribe((creative)=>{\n       this.creative = creative;\n     });\n   }\n\n   updateCreative(updateCreativeForm) : void {\n     this.creative.status = 'Updated';\n     const param = this.route.snapshot.paramMap.get('id');\n     this.creativeService.updateCreative(param, this.creative)\n           .subscribe((creative)=>{\n             console.log(creative);\n           });\n     this.router.navigate(['detail/',param]);\n     }\n\n   deleteCreative(){\n     if (confirm(`Are you sure you want to delete ${this.creative.name}?`)){\n       console.log(`deleting ${this.creative._id}`);\n       this.creativeService.deleteCreative(this.creative._id)\n         .subscribe((result)=>{\n           alert(`${this.creative.name} has been deleted`);\n           this.router.navigate(['/gallery']);\n         })\n       }\n   }\n\n   // define allowable fields\n   lobs = [\n     'Mainstreet',\n     'Upmarket',\n     \"Sony\",\n     \"Small Business\"]\n\n     status = [\n       'New',\n       'Complete',\n       'Pending',\n       'Reviewed']\n\n   vendors = [\n       'DD Ronelly',\n       'Outlet',\n       \"Bartleby's\",\n       \"JLM\"]\n\n   volumes = [\n     '1 to 100,000',\n     '100,001 to 250,000',\n     '250,001 to 500,000',\n     '500,001 to 1,000,000',\n     '1,000,001 to 2,500,000',\n     '2,500,001 to 10,000,000',\n     '>10,000,000']\n\n   printMethods = [\n     'Inkjet',\n     'Laser',\n     \"MICR\"\n   ]\n\n   simplexDuplexs = [\n     'Simpex',\n     'Duplex'\n   ]\n\n   heights = [\n     '11',\n     '14',\n     '17',\n     '22',\n   ]\n\n   inserts = [\n     '1',\n     '2',\n   ]\n\n   months = ['January',\n     'February',\n     'March',\n     'April',\n     'May',\n     'June',\n     'July',\n     'August',\n     'September',\n     'October',\n     'November',\n     'Decemeber'\n   ]\n\n   weeks = [\n   '1',\n   '2',\n   '3',\n   '4',\n   '5'\n   ]\n\n   miscCharges = [\n   {charge:'Spot Glue',code:'SPG'},\n   {charge:'Glitter',code:'GLR'},\n   {charge:'Waffer Seal',code:'WFS'},\n   {charge:'Attractive Smell',code:'SML'},\n   {charge:'Matt Bartles Awesomeness',code:'A1+'}\n   ]\n\n   resFams = [\n     'Interstack Card Affix',\n     'Closed Face with Unique Spot Emboss',\n     'Interstack Cardstock Buckslip'\n   ]\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/updatecreative/updatecreative.component.ts","export const environment = {\n  production: true,\n  apiurl: '/'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}